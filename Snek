<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cozy Snake Game</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            color: #333;
            margin: 0;
            padding: 20px;
            transition: background-color 0.5s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
        }
        h1 {
            color: #4CAF50;
            animation: fadeIn 1s ease-in-out;
            margin-bottom: 10px;
        }
        p {
            font-size: 18px;
            text-align: center;
        }
        a {
            color: #2196F3;
        }
        .button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
            margin: 5px;
        }
        .button:hover {
            background-color: #45a049;
        }
        #settings {
            margin-bottom: 20px;
            display: flex;
            gap: 10px;
            align-items: center;
        }
        #gameArea {
            width: 400px;
            height: 400px;
            border: 2px solid #4CAF50;
            position: relative;
            background-color: #fff;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            margin-bottom: 20px;
        }
        .snake {
            background-color: #4CAF50;
            position: absolute;
            border-radius: 3px;
        }
        .food {
            background-color: #FF6347;
            position: absolute;
            border-radius: 3px;
        }
        #scoreBoard {
            margin-top: 20px;
        }
        #footer {
            position: absolute;
            bottom: 10px;
            right: 10px;
            font-size: 14px;
            color: #666;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
    </style>
</head>
<body>

    <h1>Welcome to the Cozy Snake Game!</h1>
    <p>Change the settings, start the game, and use the controls to play!</p>
    <p>Learn more about web development <a href="https://www.w3schools.com/">here</a>.</p>

    <div id="settings">
        <label for="difficulty">Difficulty:</label>
        <select id="difficulty">
            <option value="100">Easy</option>
            <option value="75">Medium</option>
            <option value="50">Hard</option>
        </select>
        <label for="segments">Segments per Apple:</label>
        <select id="segments">
            <option value="1">1 Segment</option>
            <option value="2">2 Segments</option>
            <option value="3">3 Segments</option>
        </select>
    </div>

    <button class="button" onclick="changeBackgroundColor()">Change Background Color</button>
    <button class="button" onclick="startGame()">Start Snake Game</button>
    <button class="button" onclick="stopGame()">Stop Game</button>

    <div id="gameArea"></div>
    <div id="scoreBoard"></div>

    <div id="footer">Website made by Simeon Sherwood</div>

    <script>
        let snake, food, score, direction, gameInterval, gameActive, segmentGain, difficulty;
        const scores = [];

        function changeBackgroundColor() {
            const colors = ['#f9f9f9', '#ffcccb', '#add8e6', '#90ee90', '#ffeb3b', '#ff69b4'];
            document.body.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        }

        function startGame() {
            clearInterval(gameInterval);
            score = 0;
            direction = { x: 20, y: 0 };
            snake = [{ x: 200, y: 200 }];
            segmentGain = parseInt(document.getElementById('segments').value);
            difficulty = parseInt(document.getElementById('difficulty').value);
            placeFood();
            gameActive = true;
            gameInterval = setInterval(gameLoop, difficulty);
            document.addEventListener('keydown', changeDirection);
        }

        function stopGame() {
            clearInterval(gameInterval);
            gameActive = false;
            document.removeEventListener('keydown', changeDirection);
            scores.push(score);
            if (scores.length > 3) scores.shift(); // Keep only last 3 scores
            updateScoreBoard();
            alert(`Game Over! Your score was: ${score}`);
        }

        function gameLoop() {
            const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };

            // Check for collision with borders
            if (head.x < 0 || head.x >= 400 || head.y < 0 || head.y >= 400 || checkCollisionWithTail(head)) {
                stopGame();
                return;
            }

            // Check for collision with food
            if (head.x === food.x && head.y === food.y) {
                score += segmentGain;
                for (let i = 0; i < segmentGain; i++) {
                    snake.push({ ...snake[snake.length - 1] }); // Add new segments
                }
                placeFood();
            } else {
                snake.pop(); // Remove last segment if no food eaten
            }

            // Add new head to snake
            snake.unshift(head);
            draw();
        }

        function checkCollisionWithTail(head) {
            return snake.slice(1).some(segment => segment.x === head.x && segment.y === head.y);
        }

        function draw() {
            const gameArea = document.getElementById('gameArea');
            gameArea.innerHTML = '';
            snake.forEach(segment => {
                const snakePart = document.createElement('div');
                snakePart.classList.add('snake');
                snakePart.style.width = '20px';
                snakePart.style.height = '20px';
                snakePart.style.left = segment.x + 'px';
                snakePart.style.top = segment.y + 'px';
                gameArea.appendChild(snakePart);
            });
            const foodElement = document.createElement('div');
            foodElement.classList.add('food');
            foodElement.style.width = '20px';
            foodElement.style.height = '20px';
            foodElement.style.left = food.x + 'px';
            foodElement.style.top = food.y + 'px';
            gameArea.appendChild(foodElement);
        }

        function placeFood() {
            food = {
                x: Math.floor(Math.random() * 20) * 20,
                y: Math.floor(Math.random() * 20) * 20
            };
        }

        function changeDirection(event) {
            switch (event.key) {
                case 'ArrowUp':
                case 'w':
                case 'W':
                    if (direction.y === 0) direction = { x: 0, y: -20 };
                    break;
                case 'ArrowDown':
                case 's':
                case 'S':
                    if (direction.y === 0) direction = { x: 0, y: 20 };
                    break;
                case 'ArrowLeft':
                case 'a':
                case 'A':
                    if (direction.x === 0) direction = { x: -20, y: 0 };
                    break;
                case 'ArrowRight':
                case 'd':
                case 'D':
                    if (direction.x === 0) direction = { x: 20, y: 0 };
                    break;
            }
        }

        function updateScoreBoard() {
            const scoreBoard = document.getElementById('scoreBoard');
            scoreBoard.innerHTML = `<h3>Last 3 Scores:</h3><ul>${scores.map(s => `<li>${s}</li>`).join('')}</ul>`;
        }
    </script>

</body>
</html>
